services:
#  rabbit:
#    image: rabbitmq:3.12-management
#    hostname: rabbitmq
#    ports:
#      - 5672:5672
#      - 15672:15672
#    healthcheck:
#      test: rabbitmq-diagnostics check_port_connectivity
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 5s
#    extends:
#      file: common-config.yml
#      service: network-deploy-service
  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    extends:
      file: common-config.yml
      service: network-deploy-service

  redis:
    image: redis
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      timeout: 10s
      retries: 10
    extends:
      file: common-config.yml
      service: network-deploy-service

  accountsdb:
    container_name: accountsdb
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: accountsdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  loansdb:
    container_name: loansdb
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: loansdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  cardsdb:
    container_name: cardsdb
    ports:
      - 3308:3306
    environment:
      MYSQL_DATABASE: cardsdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  configserver:
    image: "r.edu.codespring.ro/training-assets/kubernetes-fozocskek/configserver:v6"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config

  eurekaserver:
    image: "r.edu.codespring.ro/training-assets/kubernetes-fozocskek/eurekaserver:v6"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"

  accounts:
    image: "r.edu.codespring.ro/training-assets/kubernetes-fozocskek/accounts:v7"
    container_name: accounts-ms
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      SPRING_DATASOURCE_URL: "jdbc:mysql://accountsdb:3306/accountsdb"
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: "kafka:9092"
    depends_on:
      accountsdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eurekaserver-config

  loans:
    image: "r.edu.codespring.ro/training-assets/kubernetes-fozocskek/loans:v6"
    container_name: loans-ms
    ports:
      - "8083:8083"
    healthcheck:
      test: "curl --fail --silent localhost:8083/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "loans"
      SPRING_DATASOURCE_URL: "jdbc:mysql://loansdb:3306/loansdb"
    depends_on:
      loansdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eurekaserver-config

#  loans1:
#    image: "r.edu.codespring.ro/training-assets/kubernetes-fozocskek/loans:v6"
#    container_name: loans-ms1
#    ports:
#      - "8084:8083"
#    healthcheck:
#      test: "curl --fail --silent localhost:8084/actuator/health/readiness | grep UP || exit 1"
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 10s
#    environment:
#      SPRING_APPLICATION_NAME: "loans"
#      SPRING_DATASOURCE_URL: "jdbc:mysql://loansdb:3306/loansdb"
#    depends_on:
#      loansdb:
#        condition: service_healthy
#      configserver:
#        condition: service_healthy
#    extends:
#      file: common-config.yml
#      service: microservice-eurekaserver-config

  cards:
    image: "r.edu.codespring.ro/training-assets/kubernetes-fozocskek/cards:v6"
    container_name: cards-ms
    ports:
      - "8082:8082"
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "cards"
      SPRING_DATASOURCE_URL: "jdbc:mysql://cardsdb:3306/cardsdb"
    depends_on:
      cardsdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eurekaserver-config

  gatewayserver:
    image: "r.edu.codespring.ro/training-assets/kubernetes-fozocskek/gatewayserver:v6"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
      SPRING_DATA_REDIS_CONNECTION-TIMEOUT: 2s
      SPRING_DATA_REDIS_REDIS_HOST: redis
      SPRING_DATA_REDIS_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 1s
    depends_on:
      accounts:
        condition: service_healthy
      loans:
        condition: service_healthy
      cards:
        condition: service_healthy
      configserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eurekaserver-config

  message:
    image: "r.edu.codespring.ro/training-assets/kubernetes-fozocskek/message:v7"
    container_name: message_ms
    environment:
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: "kafka:9092"
    extends:
      service: network-deploy-service
      file: common-config.yml

networks:
  easybank:
    driver: "bridge"

volumes:
  kafka_data:
    driver: local